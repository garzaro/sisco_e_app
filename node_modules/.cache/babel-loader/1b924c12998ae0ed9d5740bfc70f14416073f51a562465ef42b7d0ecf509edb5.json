{"ast":null,"code":"var _jsxFileName = \"/home/cleber/desenvolvimento/2-doing/sisco_e_app/src/components/navbar/navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom'; // Para manejar la navegación\nimport PropTypes from 'prop-types'; // Para validar las props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  brandName,\n  links,\n  onLinkClick\n}) => {\n  _s();\n  const [isMenuOpen, setIsMenuOpen] = useState(false); // Estado para el menú móvil\n\n  // Función para alternar el menú en dispositivos móviles\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-brand\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"navbar-logo\",\n        children: brandName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-toggle\",\n        onClick: toggleMenu,\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `navbar-menu ${isMenuOpen ? 'active' : ''}`,\n      children: links.map((link, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"navbar-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: link.path,\n          className: \"navbar-link\",\n          onClick: () => {\n            onLinkClick && onLinkClick(link.name); // Opcional: ejecutar una acción al hacer clic\n            setIsMenuOpen(false); // Cerrar el menú en móvil después de hacer clic\n          },\n          children: link.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n// Validación de props\n_s(Navbar, \"vK10R+uCyHfZ4DZVnxbYkMWJB8g=\");\n_c = Navbar;\nNavbar.propTypes = {\n  brandName: PropTypes.string.isRequired,\n  // Nombre de la marca\n  links: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    // Nombre del enlace\n    path: PropTypes.string.isRequired // Ruta del enlace\n  })).isRequired,\n  onLinkClick: PropTypes.func // Función opcional al hacer clic en un enlace\n};\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Link","PropTypes","jsxDEV","_jsxDEV","Navbar","brandName","links","onLinkClick","_s","isMenuOpen","setIsMenuOpen","toggleMenu","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","link","index","path","name","_c","propTypes","string","isRequired","arrayOf","shape","func","$RefreshReg$"],"sources":["/home/cleber/desenvolvimento/2-doing/sisco_e_app/src/components/navbar/navbar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'; // Para manejar la navegación\nimport PropTypes from 'prop-types'; // Para validar las props\n\nconst Navbar = ({ brandName, links, onLinkClick }) => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false); // Estado para el menú móvil\n\n    // Función para alternar el menú en dispositivos móviles\n    const toggleMenu = () => {\n        setIsMenuOpen(!isMenuOpen);\n    };\n\n    return (\n        <nav className=\"navbar\">\n            {/* Brand/Logo */}\n            <div className=\"navbar-brand\">\n                <Link to=\"/\" className=\"navbar-logo\">\n                    {brandName}\n                </Link>\n                {/* Botón para el menú móvil */}\n                <button className=\"navbar-toggle\" onClick={toggleMenu}>\n                    ☰\n                </button>\n            </div>\n\n            {/* Menú de enlaces */}\n            <ul className={`navbar-menu ${isMenuOpen ? 'active' : ''}`}>\n                {links.map((link, index) => (\n                    <li key={index} className=\"navbar-item\">\n                        <Link\n                            to={link.path}\n                            className=\"navbar-link\"\n                            onClick={() => {\n                                onLinkClick && onLinkClick(link.name); // Opcional: ejecutar una acción al hacer clic\n                                setIsMenuOpen(false); // Cerrar el menú en móvil después de hacer clic\n                            }}\n                        >\n                            {link.name}\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\n// Validación de props\nNavbar.propTypes = {\n    brandName: PropTypes.string.isRequired, // Nombre de la marca\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired, // Nombre del enlace\n            path: PropTypes.string.isRequired, // Ruta del enlace\n        })\n    ).isRequired,\n    onLinkClick: PropTypes.func, // Función opcional al hacer clic en un enlace\n};\n\nexport default Navbar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AACzC,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,SAAS;EAAEC,KAAK;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD;EACA,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACrBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,oBACIN,OAAA;IAAKS,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBAEnBV,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBV,OAAA,CAACH,IAAI;QAACc,EAAE,EAAC,GAAG;QAACF,SAAS,EAAC,aAAa;QAAAC,QAAA,EAC/BR;MAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEPf,OAAA;QAAQS,SAAS,EAAC,eAAe;QAACO,OAAO,EAAER,UAAW;QAAAE,QAAA,EAAC;MAEvD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGNf,OAAA;MAAIS,SAAS,EAAE,eAAeH,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;MAAAI,QAAA,EACtDP,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBnB,OAAA;QAAgBS,SAAS,EAAC,aAAa;QAAAC,QAAA,eACnCV,OAAA,CAACH,IAAI;UACDc,EAAE,EAAEO,IAAI,CAACE,IAAK;UACdX,SAAS,EAAC,aAAa;UACvBO,OAAO,EAAEA,CAAA,KAAM;YACXZ,WAAW,IAAIA,WAAW,CAACc,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;YACvCd,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UAC1B,CAAE;UAAAG,QAAA,EAEDQ,IAAI,CAACG;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GAVFI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;;AAED;AAAAV,EAAA,CA1CMJ,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AA2CZA,MAAM,CAACsB,SAAS,GAAG;EACfrB,SAAS,EAAEJ,SAAS,CAAC0B,MAAM,CAACC,UAAU;EAAE;EACxCtB,KAAK,EAAEL,SAAS,CAAC4B,OAAO,CACpB5B,SAAS,CAAC6B,KAAK,CAAC;IACZN,IAAI,EAAEvB,SAAS,CAAC0B,MAAM,CAACC,UAAU;IAAE;IACnCL,IAAI,EAAEtB,SAAS,CAAC0B,MAAM,CAACC,UAAU,CAAE;EACvC,CAAC,CACL,CAAC,CAACA,UAAU;EACZrB,WAAW,EAAEN,SAAS,CAAC8B,IAAI,CAAE;AACjC,CAAC;AAED,eAAe3B,MAAM;AAAC,IAAAqB,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}